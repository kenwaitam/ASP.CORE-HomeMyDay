// <auto-generated />
using HomeMyDay.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HomeMyDay.Migrations
{
    [DbContext(typeof(HolidayDbContext))]
    partial class HolidayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeMyDay.Models.Accommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Beds");

                    b.Property<string>("Continent");

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<int>("MaxPersons");

                    b.Property<string>("Name");

                    b.Property<int?>("Rooms");

                    b.HasKey("Id");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("HomeMyDay.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccommodationId");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<DateTime>("ReturnDate");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HomeMyDay.Models.BookingPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<int?>("BookingId");

                    b.Property<bool>("BookingOwner");

                    b.Property<int?>("CountryGeoId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("HouseNumber");

                    b.Property<string>("HouseNumberSuffix");

                    b.Property<string>("Insertion");

                    b.Property<string>("LastName");

                    b.Property<int?>("NationalityGeoId");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PostalCode");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("CountryGeoId");

                    b.HasIndex("NationalityGeoId");

                    b.ToTable("BookingPerson");
                });

            modelBuilder.Entity("HomeMyDay.Models.Country", b =>
                {
                    b.Property<int>("GeoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryCode");

                    b.Property<string>("Name");

                    b.HasKey("GeoId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HomeMyDay.Models.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccommodationId");

                    b.Property<string>("Category");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<decimal>("Price");

                    b.Property<bool>("Recommended");

                    b.Property<DateTime>("ReturnDate");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("HomeMyDay.Models.Booking", b =>
                {
                    b.HasOne("HomeMyDay.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId");
                });

            modelBuilder.Entity("HomeMyDay.Models.BookingPerson", b =>
                {
                    b.HasOne("HomeMyDay.Models.Booking")
                        .WithMany("Persons")
                        .HasForeignKey("BookingId");

                    b.HasOne("HomeMyDay.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryGeoId");

                    b.HasOne("HomeMyDay.Models.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityGeoId");
                });

            modelBuilder.Entity("HomeMyDay.Models.Holiday", b =>
                {
                    b.HasOne("HomeMyDay.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId");
                });
#pragma warning restore 612, 618
        }
    }
}
